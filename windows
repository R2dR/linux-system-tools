#!/bin/bash
VERSION=1.4
# Copyright(c) 2012 RubytotheRails.com
# This is free software distributed per the MIT License at www.r2dr.com/licenses/commands
# Copyright and License URL must be included for any distribution
function paint { echo $2; }
function colorOn { echo -n; }
function colorOff { echo -n; }
[[ -f "$(dirname $0)/colorize" ]] && source "$(dirname $0)/colorize"

function usage {
  echo "Window manager utility"
  echo "Usage: windows [query|options]"
  echo "Usage: apps"
  echo ""
  echo "Options:"
  echo "  -c, --close   Close window"
  echo "  -s, --show    Show window"
  echo "  -h, --help"
}

GREPQUERY=
ACTION=
for arg in "$@"; do
case $arg in
  -h|--help) usage; exit ;;
  -c|-x|--close) [[ -z $ACTION ]] && ACTION=close ;;
  -s|--show) [[ -z $ACTION ]] && ACTION=show ;;
  --version) echo $VERSION; exit ;;
  *)
  	if [[ -z $GREPQUERY ]]; then
  		GREPQUERY=$arg
  	fi
  ;;
esac
done

type wmctrl >/dev/null 2>&1 || {
  read -p "Wmctrl utility is required. Would you like to install Wmctrl? (y/n)" -n 1 -r; echo ""
  if [[ $REPLY =~ [Yy] ]]; then
    sudo apt-get install wmctrl
    echo "'wmctrl' installed."; echo ""
  else
  	echo ""
  	exit 1
  fi
}

function list_windows {
	wmctrl -lpx | tr -s ' ' | cut -d' ' -f1,3-4,6- | sed "s/ /|/;s/ /|/;s/ /|/"
}
function sort_windows {
	list_windows | column -t -s '|' | sort -k3,4
}
function close_window {
	hex_win_id=$1
	name=$2
	colorOn orange
	echo "Closing window: $name"
	read -p "Are you sure? (y/n)" -n 1 -r; echo ""
	if [[ $REPLY =~ [Yy] ]]; then
		wmctrl -i -c $hex_win_id
		paint green "Closed."
	fi
	colorOff
}
function show_window {
	hex_win_id=$1
	name=$2
	paint green "Showing window: $name"
	wmctrl -i -R $hex_win_id
}
function capitalize {
	ARR=($1)
	echo "${ARR[@]^}"
}

if [[ $ACTION ]]; then
	if [[ -z $GREPQUERY ]]; then
		paint orange "Must provide a grep pattern to $ACTION a window"
		echo ""; exit
	fi
	OUT=$(mktemp)
	list_windows | grep $GREPQUERY > $OUT
	count=$(wc -l < $OUT)
	case $count in
		0) paint yellow "No windows to $ACTION" ;;
		1)
			NAME=$(head -n 1 $OUT | cut -d'|' -f4)
			HEXWINID=$(head -n 1 $OUT | cut -d'|' -f1)
			case $ACTION in
				close) close_window $HEXWINID $NAME ;;
				show) show_window $HEXWINID $NAME ;;
			esac
			;;
		*)
			paint orange "Can only $ACTION one window.  $count windows grepped."
			;;
	esac
elif [[ $GREPQUERY ]]; then
	colorOn yellow
	sort_windows | grep $GREPQUERY
	colorOff
else
	colorOn yellow
	sort_windows
	colorOff
fi

echo ""
